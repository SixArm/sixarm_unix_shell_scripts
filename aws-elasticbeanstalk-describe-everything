#!/bin/sh

banner(){
  echo "\n### $1 ###\n"
}
 
show_beanstalk(){
  banner "Applications"
  aws --profile "$AWS_PROFILE" elasticbeanstalk describe-applications

  banner "Application Versions"
  aws --profile "$AWS_PROFILE" elasticbeanstalk describe-application-versions

  banner "Environments"
  aws --profile "$AWS_PROFILE" elasticbeanstalk describe-environments

  banner "Platforms"
  aws --profile "$AWS_PROFILE" elasticbeanstalk describe-environments |
  jq -r '[.Environments[].PlatformArn] | unique[]'

  banner "Account Attributes"
  aws --profile "$AWS_PROFILE" elasticbeanstalk describe-account-attributes

  banner "Events"
  aws --profile "$AWS_PROFILE" elasticbeanstalk describe-events
}

show_environment(){
  name="$1"
  banner "Environment: $name"

  banner "Environment Health"
  aws --profile "$AWS_PROFILE" elasticbeanstalk describe-environment-health --environment-name "$name" --attribute-names All

  banner "Instances Health"
  aws --profile "$AWS_PROFILE" elasticbeanstalk describe-instances-health --environment-name "$name" --attribute-names All

  banner "Environment Resources" 
  aws --profile "$AWS_PROFILE" elasticbeanstalk describe-environment-resources --environment-name "$name"

  banner "Environment Managed Actions"
  aws --profile "$AWS_PROFILE" elasticbeanstalk describe-environment-managed-actions --environment-name "$name"
 
  banner "Environment Managed Action History (max items 10)"
  aws --profile "$AWS_PROFILE" elasticbeanstalk describe-environment-managed-action-history --environment-name "$name" --max-items 10
}

show_platform(){
  name="$1"
  banner "Platform: $name"

  banner "Platform Version"
  aws --profile "$AWS_PROFILE" elasticbeanstalk describe-platform-version --platform-arn "$name"
}

show_application(){
  name="$1"
  banner "Application: $name"

  banner "Application Version"
  aws --profile "$AWS_PROFILE" elasticbeanstalk describe-application-versions --application-name "$name"
}

preflight(){
  if [ -z ${var+x} ]; then
    echo "AWS_PROFILE is unset. Please set it then rerun."
    echo ""
    echo "For typical use, you can manage your AWS profiles"
    echo "by using the default file ~/.aws/credenetials"
    echo ""
    echo "For example suppose your file contains:"
    echo ""
    echo "    [demo]"
    echo "    aws_access_key_id=OSK7IKZINO2LF0BKT4A6"
    echo "    aws_secret_access_key=bdJi8RCbvYUEKU1pZbqmcYeFSyTKSZkVPbpYL0pY"
    echo ""
    echo "You do this:"
    echo ""
    echo "    export AWS_PROFILE=demo"
    echo ""
    exit 1
  else
    echo "AWS_PROFILE=$AWS_PROFILE"
  fi    
}
    
main(){
  banner "AWS Elastic Beanstalk - describe everything"
  preflight
  show_beanstalk

  for name in $(aws --profile "$AWS_PROFILE" elasticbeanstalk describe-environments | jq -r '.Environments[].EnvironmentName'); do
    show_environment $name 
  done

  for name in $(aws --profile "$AWS_PROFILE" elasticbeanstalk describe-environments | jq -r '[.Environments[].PlatformArn] | unique[]'); do
    show_platform $name
  done

  for name in $(aws --profile "$AWS_PROFILE" elasticbeanstalk describe-applications | jq -r '.Applications[].ApplicationName'); do 
    show_application $name
  done
}

main
